{"ast":null,"code":"import _classCallCheck from \"/Users/hy/Desktop/project6/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hy/Desktop/project6/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hy/Desktop/project6/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hy/Desktop/project6/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/hy/Desktop/project6/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/hy/Desktop/project6/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/hy/Desktop/project6/src/EndModal.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Modal from 'react-modal';\nimport './styles/Modal.css';\n\nvar EndModal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EndModal, _Component);\n\n  function EndModal() {\n    var _this;\n\n    _classCallCheck(this, EndModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EndModal).call(this));\n\n    _this.getStations = function () {};\n\n    _this.state = {\n      modalIsOpen: false,\n      stations: [],\n      filterEnd: '',\n      emptySlot: ''\n    };\n    _this.openModal = _this.openModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.afterOpenModal = _this.afterOpenModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.closeModal = _this.closeModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EndModal, [{\n    key: \"openModal\",\n    value: function openModal() {\n      var stations = this.state.stations;\n      var endPoint = this.props.filterEnd;\n      var bikeArr = stations.filter(function (station) {\n        return station.name === endPoint;\n      });\n      var empty = bikeArr[0].empty_slots;\n      this.setState({\n        modalIsOpen: true,\n        emptySlot: empty\n      });\n    }\n  }, {\n    key: \"afterOpenModal\",\n    value: function afterOpenModal() {// references are now sync'd and can be accessed.\n    }\n  }, {\n    key: \"closeModal\",\n    value: function closeModal() {\n      this.setState({\n        modalIsOpen: false\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios({\n        method: 'GET',\n        url: 'http://api.citybik.es/v2/networks/toronto',\n        dataResponse: 'json'\n      }).then(function (response) {\n        var stations = response.data.network.stations;\n        var stationArr = [];\n        stations.forEach(function (item) {\n          stationArr.push(item);\n        });\n\n        _this2.setState({\n          stations: stationArr\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.openModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.props.filterEnd), React.createElement(Modal, {\n        isOpen: this.state.modalIsOpen,\n        onAfterOpen: this.afterOpenModal,\n        onRequestClose: this.closeModal,\n        className: \"modal\",\n        overlayClassName: \"overlay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modalContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Real-time availability of empty bike slots\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"At this station: \", this.props.filterEnd, \" there are \", this.state.emptySlot, \" slots left\")), React.createElement(\"button\", {\n        className: \"closeModal\",\n        onClick: this.closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"close\")));\n    }\n  }]);\n\n  return EndModal;\n}(Component);\n\nexport default EndModal;","map":{"version":3,"sources":["/Users/hy/Desktop/project6/src/EndModal.js"],"names":["React","Component","axios","Modal","EndModal","getStations","state","modalIsOpen","stations","filterEnd","emptySlot","openModal","bind","afterOpenModal","closeModal","endPoint","props","bikeArr","filter","station","name","empty","empty_slots","setState","method","url","dataResponse","then","response","data","network","stationArr","forEach","item","push"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport Modal from 'react-modal';\nimport './styles/Modal.css';\n\nclass EndModal extends Component {\n    constructor() {\n        super()\n        this.state = {\n            modalIsOpen: false,\n            stations: [],\n            filterEnd:'',\n            emptySlot:''\n        }\n\n    this.openModal = this.openModal.bind(this);\n    this.afterOpenModal = this.afterOpenModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    }\n\n    openModal() {\n        const stations = this.state.stations;\n        const endPoint = this.props.filterEnd;\n        \n        const bikeArr = stations.filter((station)=>{\n            return station.name === endPoint;\n        });\n\n        const empty = bikeArr[0].empty_slots;\n        \n        this.setState({ \n                modalIsOpen: true,\n                emptySlot: empty\n            });\n    }\n\n    afterOpenModal() {\n        // references are now sync'd and can be accessed.\n    }\n\n    closeModal() {\n        this.setState({ modalIsOpen: false });\n    }\n\n    getStations = () => {\n        \n    }\n\n    componentDidMount() {\n        axios({\n            method: 'GET',\n            url: 'http://api.citybik.es/v2/networks/toronto',\n            dataResponse: 'json'\n        })\n        .then((response) => {\n            const stations = response.data.network.stations;\n            const stationArr = [];\n            stations.forEach((item) => {\n                stationArr.push(item);\n            })\n            this.setState({\n                stations: stationArr\n            })\n        })\n    }\n\n\n    render() {\n        return (\n            <div>\n                <button onClick={this.openModal}>{this.props.filterEnd}</button>\n                <Modal\n                    isOpen={this.state.modalIsOpen}\n                    onAfterOpen={this.afterOpenModal}\n                    onRequestClose={this.closeModal}\n                    className=\"modal\"\n                    overlayClassName=\"overlay\"\n                >\n                    <div className=\"modalContent\">\n                        <h2>Real-time availability of empty bike slots</h2>\n                        <p>At this station: {this.props.filterEnd} there are {this.state.emptySlot} slots left</p>\n                    </div>\n                    <button className=\"closeModal\" onClick={this.closeModal}>close</button>\n                </Modal>\n            </div>\n        )\n    }\n\n}\n\n\n\nexport default EndModal;"]},"metadata":{},"sourceType":"module"}