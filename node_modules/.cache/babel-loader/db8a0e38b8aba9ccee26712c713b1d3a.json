{"ast":null,"code":"import _objectSpread from \"/Users/hy/Desktop/project6/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/hy/Desktop/project6/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hy/Desktop/project6/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hy/Desktop/project6/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hy/Desktop/project6/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/hy/Desktop/project6/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/hy/Desktop/project6/src/App.js\";\nimport React, { Component } from 'react';\nimport firebase from './firebase.js';\nimport RacePoints from './RacePoints.js';\nimport NameDesc from './NameDesc.js';\nimport Result from './Result.js';\nimport PrevRaces from './PrevRaces.js';\nimport './styles/Setup.css';\nimport './styles/Header.css';\nimport scrollToComponent from 'react-scroll-to-component';\nimport swal from '@sweetalert/with-react';\nimport axios from 'axios';\nimport UserPrevRace from './UserPrevRace.js';\nimport logo from './logo.png'; // import RandomRace from './RandomRace.js';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.getStations = function () {\n      return axios({\n        method: 'GET',\n        url: 'https://api.citybik.es/v2/networks/toronto',\n        dataResponse: 'json'\n      }).then(function (response) {\n        var stations = response.data.network.stations;\n        var stationArr = [];\n        stations.forEach(function (item) {\n          stationArr.push(item);\n        });\n\n        _this.setState({\n          stations: stationArr\n        });\n\n        console.log('AXIO succed');\n        var stationsOptions = stationArr.map(function (station) {\n          return {\n            label: station.name,\n            value: station.name\n          };\n        });\n\n        _this.setState({\n          options: stationsOptions\n        });\n      });\n    };\n\n    _this.getStationsFromFirebase = function () {\n      console.log('plan B');\n      var dbRef = firebase.database().ref();\n      dbRef.on('value', function (res) {\n        var data = res.val();\n        var temArr = [];\n\n        for (var key in data) {\n          temArr.push(data[key]);\n        }\n\n        var stationsObj = temArr[0];\n        var stationsOptions = stationsObj.map(function (station) {\n          return {\n            label: station.name,\n            value: station.name\n          };\n        });\n\n        _this.setState({\n          options: stationsOptions\n        });\n      });\n    };\n\n    _this.upDateName = function (e) {\n      var userName = e.target.value;\n\n      _this.setState({\n        name: userName\n      });\n    };\n\n    _this.upDateDesc = function (e) {\n      var userDesc = e.target.value;\n\n      _this.setState({\n        description: userDesc\n      });\n    };\n\n    _this.handleStartChange = function (event) {\n      _this.setState({\n        race: _objectSpread({}, _this.state.race, {\n          startPoint: event.label\n        })\n      });\n    };\n\n    _this.handleEndChange = function (event) {\n      _this.setState({\n        race: _objectSpread({}, _this.state.race, {\n          endPoint: event.label\n        })\n      });\n    };\n\n    _this.handleCheckPointChange = function (event) {\n      console.log(event);\n\n      _this.setState({\n        race: _objectSpread({}, _this.state.race, {\n          newRaceArray: event\n        })\n      });\n    };\n\n    _this.addCheckPoint = function (event) {\n      event.preventDefault();\n      var changeArray = [];\n\n      _this.state.race.newRaceArray.forEach(function (checkpoint) {\n        changeArray.push(checkpoint.label);\n      });\n\n      console.log(changeArray);\n\n      _this.setState({\n        race: _objectSpread({}, _this.state.race, {\n          raceArray: changeArray\n        })\n      });\n    };\n\n    _this.deleteCheckpoint = function (index) {\n      swal({\n        title: \"Are you sure?\",\n        text: \"Do you want to delete the \".concat(_this.state.race.raceArray[index], \" checkpoint\"),\n        icon: \"warning\",\n        buttons: true,\n        dangerMode: true\n      }).then(function (willDelete) {\n        if (willDelete) {\n          var changeArray = _this.state.race.raceArray;\n          changeArray.splice(index, 1);\n\n          _this.setState({\n            race: _objectSpread({}, _this.state.race, {\n              raceArray: changeArray\n            })\n          });\n        } else {\n          swal(\"Your checkpoint is safe!\");\n        }\n      });\n    };\n\n    _this.handleSaveRace = function (event) {\n      event.preventDefault();\n      var currentDate = new Date();\n      var year = currentDate.getFullYear();\n      var month = currentDate.getMonth() + 1;\n      var day = currentDate.getDate();\n      var hour = currentDate.getHours();\n      var minute = currentDate.getMinutes();\n      var timeCreated = \"\".concat(month, \"-\").concat(day, \"-\").concat(year, \" \").concat(hour, \":\").concat(minute);\n      var savedRace = {\n        name: _this.state.name,\n        description: _this.state.description,\n        startPoint: _this.state.race.startPoint,\n        endPoint: _this.state.race.endPoint,\n        selectedCheckpoint: _this.state.race.raceArray,\n        timeCreated: timeCreated\n      };\n      var dbRef;\n\n      if (_this.state.user) {\n        var authID = _this.state.authID;\n        dbRef = firebase.database().ref(\"authUsers/\".concat(authID));\n      } else {\n        dbRef = firebase.database().ref();\n      }\n\n      if (savedRace.name && savedRace.description && savedRace.startPoint && savedRace.endPoint) {\n        dbRef.push(savedRace);\n\n        _this.setState({\n          name: '',\n          description: \"\",\n          race: {\n            startPoint: '',\n            endPoint: '',\n            selectedCheckpoint: [],\n            raceArray: [],\n            timeCreated: ''\n          },\n          view: null\n        });\n      } else {\n        swal('Please make sure you have entered a race name and description, and have selected a station for your \"start\" and \"finish\" locations.');\n      }\n\n      _this.setState({\n        randomRaceCreated: false\n      });\n    };\n\n    _this.handlePrevRace = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        view: null\n      });\n    };\n\n    _this.handleHome = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        view: true\n      });\n    };\n\n    _this.scrollND = function () {\n      scrollToComponent(_this.NameDesc);\n    };\n\n    _this.scrollRP = function () {\n      scrollToComponent(_this.RacePoints);\n    };\n\n    _this.scrollRes = function () {\n      scrollToComponent(_this.Result);\n    };\n\n    _this.getLocation = function () {\n      // console.log(\"getLocation RAAANNN\");\n      navigator.geolocation.getCurrentPosition(function (location) {\n        if (location.coords) {\n          var lat = location.coords.latitude;\n          var long = location.coords.longitude;\n          console.log(lat, long);\n\n          _this.setState({\n            longitude: long,\n            latitude: lat,\n            hasCoords: true\n          }, function () {\n            console.log(_this.state, \"this is the state\");\n          });\n        }\n      });\n    };\n\n    _this.getStationCoords = function () {\n      return axios({\n        method: 'GET',\n        url: 'http://api.citybik.es/v2/networks/toronto',\n        dataResponse: 'json'\n      }).then(function (response) {\n        console.log(response.data.network.stations, \"this is the response data stations\");\n        var stations = response.data.network.stations;\n        var stationCoordsArr = [];\n        var totalDist = [];\n        stations.forEach(function (station) {\n          // console.log(this.state.latitude);\n          var latDist = Math.abs(station.latitude - _this.state.latitude);\n          var lngDist = Math.abs(station.longitude - _this.state.longitude);\n          var totDist = latDist + lngDist;\n          var stn = {\n            name: station.name,\n            totalDist: totDist\n          };\n          totalDist.push(stn);\n        });\n        totalDist.sort(function (a, b) {\n          return a.totalDist - b.totalDist;\n        });\n        console.log(totalDist, \"this is the totalDist array\");\n        var nearStn = totalDist[0].name;\n        var nearestHund = totalDist.splice(1, 100);\n        console.log(nearestHund, \"this is the nearest hundred\");\n        console.log(nearStn, \"this is the nearest station\");\n\n        _this.setState({\n          nearestStn: nearStn,\n          nearestHundred: nearestHund\n        });\n\n        console.log(_this.state, \"this is the current state - Gus\");\n      });\n    };\n\n    _this.randomRace = function () {\n      var startPoint = _this.state.nearestStn;\n      console.log(startPoint);\n      var finish = _this.state.nearestHundred[99].name;\n      var checkOneRand = Math.floor(Math.random() * 20);\n      var checkTwoRand = Math.floor(Math.random() * 20) + 20;\n      var checkThreeRand = Math.floor(Math.random() * 20) + 40;\n      var checkFourRand = Math.floor(Math.random() * 20) + 60;\n      var checkFiveRand = Math.floor(Math.random() * 20) + 79;\n      var checkOne = _this.state.nearestHundred[checkOneRand].name;\n      var raceArray = [];\n      raceArray.push(_this.state.nearestHundred[checkOneRand].name);\n      raceArray.push(_this.state.nearestHundred[checkTwoRand].name);\n      raceArray.push(_this.state.nearestHundred[checkThreeRand].name);\n      raceArray.push(_this.state.nearestHundred[checkFourRand].name);\n      raceArray.push(_this.state.nearestHundred[checkFiveRand].name);\n\n      if (checkOne !== \"\") {\n        _this.setState({\n          randomRaceCreated: true,\n          race: _objectSpread({}, _this.state.race, {\n            raceArray: raceArray,\n            startPoint: startPoint,\n            endPoint: finish\n          })\n        }, function () {\n          console.log(_this.state, \"this is thd state with race points\");\n        });\n      }\n    };\n\n    _this.login = function () {\n      var provider = new firebase.auth.GoogleAuthProvider();\n      var auth = firebase.auth();\n      auth.signInWithPopup(provider).then(function (result) {\n        var user = result.user;\n        var userID = user.uid;\n\n        _this.setState({\n          user: true,\n          authID: userID\n        });\n      });\n    };\n\n    _this.logout = function () {\n      var auth = firebase.auth();\n      auth.signOut().then(function () {\n        _this.setState({\n          user: null\n        });\n      });\n    };\n\n    _this.state = {\n      stations: [],\n      name: '',\n      description: \"\",\n      race: {\n        startPoint: '',\n        endPoint: '',\n        selectedCheckpoint: [],\n        raceArray: [],\n        newRaceArray: [],\n        timeCreated: ''\n      },\n      options: [],\n      view: true,\n      user: null,\n      authID: '',\n      longitude: '',\n      latitude: '',\n      hasCoords: false,\n      nearestStn: \"\",\n      nearestHundred: [],\n      randomRaceCreated: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getLocation();\n    } //API call\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.view) {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 400\n          },\n          __self: this\n        }, React.createElement(\"header\", {\n          className: \"headerContent\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 401\n          },\n          __self: this\n        }, React.createElement(\"nav\", {\n          className: \"headerNav clearfix\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 402\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          className: \"logo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 403\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"t\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 403\n          },\n          __self: this\n        }, \"T\"), React.createElement(\"img\", {\n          src: logo,\n          alt: \"Toronto bike share logo.\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 403\n          },\n          __self: this\n        }), \" Bike Share Races\"), React.createElement(\"ul\", {\n          className: \"headerList clearfix\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 404\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          className: \"home\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 405\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 405\n          },\n          __self: this\n        }, \"Home\")), React.createElement(\"li\", {\n          className: \"prevRaces\",\n          onClick: this.handlePrevRace,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 406\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 406\n          },\n          __self: this\n        }, \"Previous Races\")))), React.createElement(\"div\", {\n          className: \"hamburgerMenu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 409\n          },\n          __self: this\n        }, React.createElement(\"nav\", {\n          className: \"hamNav\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 410\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          className: \"logo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"t\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411\n          },\n          __self: this\n        }, \"T\"), React.createElement(\"img\", {\n          src: logo,\n          alt: \"Toronto bike share logo.\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411\n          },\n          __self: this\n        }), \" Bike Share Races\"), React.createElement(\"input\", {\n          className: \"hamburgerOpen\",\n          id: \"toggleOpen\",\n          type: \"checkbox\",\n          name: \"toggle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 412\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          htmlFor: \"toggleOpen\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 413\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          class: \"fa fa-bars\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 415\n          },\n          __self: this\n        })), React.createElement(\"ul\", {\n          className: \"hamburgerList\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 417\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          htmlFor: \"toggleOpen\",\n          class: \"hamburgerClose\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 418\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          class: \"fas fa-times\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 419\n          },\n          __self: this\n        })), React.createElement(\"li\", {\n          className: \"home\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 421\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 421\n          },\n          __self: this\n        }, \"Home\")), React.createElement(\"li\", {\n          className: \"prevRaces\",\n          onClick: this.handlePrevRace,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 422\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 422\n          },\n          __self: this\n        }, \"Previous Races\"))))), React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 426\n          },\n          __self: this\n        }, \"Welcome to Toronto Bike Share Races\"), React.createElement(\"button\", {\n          className: \"createRaceBtn\",\n          onClick: this.scrollND,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 427\n          },\n          __self: this\n        }, \"Create Race\"), this.state.user ? React.createElement(\"button\", {\n          className: \"logout\",\n          onClick: this.logout,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 430\n          },\n          __self: this\n        }, \"Log Out\") : React.createElement(\"button\", {\n          className: \"login\",\n          onClick: this.login,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 431\n          },\n          __self: this\n        }, \"Login\"), this.state.user ? React.createElement(\"button\", {\n          className: \"createRaceBtn\",\n          onClick: this.scrollND,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 435\n          },\n          __self: this\n        }, \"Create Race\") : React.createElement(\"button\", {\n          className: \"createRaceBtn\",\n          onClick: this.scrollND,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 436\n          },\n          __self: this\n        }, \"Create Race As Guest\")), React.createElement(NameDesc, {\n          takeName: this.upDateName,\n          takeDesc: this.upDateDesc,\n          name: this.state.name,\n          description: this.state.description,\n          ref: function ref(component) {\n            _this2.NameDesc = component;\n          },\n          scrollRacePoints: this.scrollRP,\n          handlePrev: this.handlePrevRace,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 440\n          },\n          __self: this\n        }), React.createElement(RacePoints, {\n          options: this.state.options,\n          getStations: this.getStations,\n          getStationsFromFirebase: this.getStationsFromFirebase,\n          handleOptionChange: this.handleOptionChange,\n          handleUserStart: this.handleStartChange,\n          handleUserEnd: this.handleEndChange,\n          handleUserCheckPoint: this.handleCheckPointChange,\n          handlePrev: this.handlePrevRace,\n          handleAddCheckPoint: this.addCheckPoint,\n          handleDeleteCheckpoint: this.deleteCheckpoint,\n          userStart: this.state.race.startPoint,\n          userEnd: this.state.race.endPoint,\n          userCheckPoint: this.state.race.selectedCheckpoint,\n          raceArray: this.state.race.raceArray,\n          scrollResults: this.scrollRes,\n          ref: function ref(component) {\n            _this2.RacePoints = component;\n          },\n          getLocation: this.getLocation,\n          longitude: this.state.longitude,\n          latitude: this.state.latitude,\n          hasCoords: this.state.hasCoords,\n          nearestStn: this.state.nearestStn,\n          nearestHundred: this.state.nearestHundred,\n          checkOne: this.state.checkOne,\n          checkTwo: this.state.checkTwo,\n          checkThree: this.state.checkThree,\n          finish: this.state.finish,\n          randomRace: this.randomRace,\n          getStationCoords: this.getStationCoords,\n          randomRaceCreated: this.state.randomRaceCreated,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 451\n          },\n          __self: this\n        }), React.createElement(Result, {\n          name: this.state.name,\n          description: this.state.description,\n          startP: this.state.race.startPoint,\n          endP: this.state.race.endPoint,\n          checkP: this.state.race.raceArray,\n          user: this.state.user,\n          handleSave: this.handleSaveRace,\n          handlePrev: this.handlePrevRace,\n          ref: function ref(component) {\n            _this2.Result = component;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 487\n          },\n          __self: this\n        }));\n      } else {\n        if (this.state.user) {\n          return React.createElement(UserPrevRace, {\n            authID: this.state.authID,\n            handleBack: this.handleHome,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 503\n            },\n            __self: this\n          });\n        } else {\n          return React.createElement(PrevRaces, {\n            handleBack: this.handleHome,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 508\n            },\n            __self: this\n          });\n        }\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/hy/Desktop/project6/src/App.js"],"names":["React","Component","firebase","RacePoints","NameDesc","Result","PrevRaces","scrollToComponent","swal","axios","UserPrevRace","logo","App","getStations","method","url","dataResponse","then","response","stations","data","network","stationArr","forEach","item","push","setState","console","log","stationsOptions","map","station","label","name","value","options","getStationsFromFirebase","dbRef","database","ref","on","res","val","temArr","key","stationsObj","upDateName","e","userName","target","upDateDesc","userDesc","description","handleStartChange","event","race","state","startPoint","handleEndChange","endPoint","handleCheckPointChange","newRaceArray","addCheckPoint","preventDefault","changeArray","checkpoint","raceArray","deleteCheckpoint","index","title","text","icon","buttons","dangerMode","willDelete","splice","handleSaveRace","currentDate","Date","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","timeCreated","savedRace","selectedCheckpoint","user","authID","view","randomRaceCreated","handlePrevRace","handleHome","scrollND","scrollRP","scrollRes","getLocation","navigator","geolocation","getCurrentPosition","location","coords","lat","latitude","long","longitude","hasCoords","getStationCoords","stationCoordsArr","totalDist","latDist","Math","abs","lngDist","totDist","stn","sort","a","b","nearStn","nearestHund","nearestStn","nearestHundred","randomRace","finish","checkOneRand","floor","random","checkTwoRand","checkThreeRand","checkFourRand","checkFiveRand","checkOne","login","provider","auth","GoogleAuthProvider","signInWithPopup","result","userID","uid","logout","signOut","component","handleOptionChange","checkTwo","checkThree"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport firebase from './firebase.js';\nimport RacePoints from './RacePoints.js';\nimport NameDesc from './NameDesc.js';\nimport Result from './Result.js';\nimport PrevRaces from './PrevRaces.js';\nimport './styles/Setup.css';\nimport './styles/Header.css';\nimport scrollToComponent from 'react-scroll-to-component';\nimport swal from '@sweetalert/with-react';\nimport axios from 'axios';\nimport UserPrevRace from './UserPrevRace.js';\nimport logo from './logo.png';\n// import RandomRace from './RandomRace.js';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      stations: [],\n      name: '',\n      description: \"\",\n      race: {\n        startPoint: '',\n        endPoint: '',\n        selectedCheckpoint: [],\n        raceArray: [],\n        newRaceArray: [],\n        timeCreated: ''\n      },\n    options: [],\n    view: true,\n    user: null,\n    authID: '',\n    longitude: '',\n    latitude: '',\n    hasCoords: false,\n    nearestStn: \"\",\n    nearestHundred: [],\n    randomRaceCreated: false\n    }\n  }\n\n  componentDidMount() {\n    this.getLocation()\n  }\n\n  //API call\n  getStations = () => {\n    return axios({\n        method: 'GET',\n        url: 'https://api.citybik.es/v2/networks/toronto',\n        dataResponse: 'json'\n    })\n        .then((response) => {\n            const stations = response.data.network.stations;\n            const stationArr = [];\n            stations.forEach((item) => {\n                stationArr.push(item);\n            })\n            this.setState({\n                stations: stationArr\n            })\n\n            console.log('AXIO succed')\n            let stationsOptions = stationArr.map((station) => {\n                return {\n                    label: station.name,\n                    value: station.name\n                }\n            })\n\n            this.setState({\n                options: stationsOptions\n            });\n\n        })\n  }\n\n  //PlanB, fetch data from firebase\n  getStationsFromFirebase = () => {\n      console.log('plan B');\n      const dbRef = firebase.database().ref();\n      dbRef.on('value', res => {\n          const data = res.val();\n          const temArr = [];\n\n          for (let key in data) {\n              temArr.push(data[key])\n          }\n\n          const stationsObj = temArr[0];\n\n          let stationsOptions = stationsObj.map((station) => {\n              return {\n                  label: station.name,\n                  value: station.name\n              }\n          })\n\n          this.setState({\n              options: stationsOptions\n          });\n      })\n  }\n  \n  //updatestate from user input\n  upDateName = (e) => {\n    const userName = e.target.value\n    this.setState({\n      name: userName\n    })\n  }\n\n  upDateDesc = (e) => {\n    const userDesc = e.target.value\n    this.setState({\n      description: userDesc\n    })\n  }\n\n  //update state from user select\n  handleStartChange = (event) => {\n    this.setState({\n      race:\n      {\n        ...this.state.race,\n        startPoint: event.label\n      }\n    });\n  }\n\n\n  handleEndChange = (event) => {\n    this.setState({\n      race:\n      {\n        ...this.state.race,\n        endPoint: event.label\n      }\n    });\n  }\n\n  handleCheckPointChange = (event) => {\n    console.log(event);\n    this.setState({\n      race:\n      {\n        ...this.state.race,\n        newRaceArray: event,\n      }\n    });\n  }\n\n  addCheckPoint = (event) => {\n    event.preventDefault();\n    let changeArray = [];\n    this.state.race.newRaceArray.forEach((checkpoint)=>{\n      changeArray.push(checkpoint.label);\n    });\n    console.log(changeArray);\n    this.setState({\n      race:\n      {\n        ...this.state.race,\n        raceArray: changeArray\n      }\n    });\n  }\n\n  deleteCheckpoint = (index) => {\n    swal({\n      title: \"Are you sure?\",\n      text: `Do you want to delete the ${this.state.race.raceArray[index]} checkpoint`,\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    })\n    .then((willDelete) => {\n      if (willDelete) {\n        let changeArray = this.state.race.raceArray;\n        changeArray.splice(index, 1);\n        this.setState({\n          race:\n          {\n            ...this.state.race,\n            raceArray: changeArray\n          }\n        });\n      } else {\n        swal(\"Your checkpoint is safe!\");\n      }\n    });\n  }\n\n  // handel save button clicked - with both gust login and auth user login\n\n  handleSaveRace = (event) => {\n    event.preventDefault();\n    let currentDate = new Date();\n    let year = currentDate.getFullYear();\n    let month = currentDate.getMonth() + 1;\n    let day = currentDate.getDate();\n    let hour = currentDate.getHours();\n    let minute = currentDate.getMinutes();\n\n    let timeCreated = `${month}-${day}-${year} ${hour}:${minute}`;\n    \n    const savedRace = {\n      name: this.state.name,\n      description: this.state.description,\n      startPoint: this.state.race.startPoint,\n      endPoint: this.state.race.endPoint,\n      selectedCheckpoint: this.state.race.raceArray,\n      timeCreated: timeCreated\n    }\n\n    let dbRef;\n    if(this.state.user){\n      const authID = this.state.authID;\n      dbRef = firebase.database().ref(`authUsers/${authID}`);\n    }else{\n      dbRef = firebase.database().ref();\n    }\n\n    if (savedRace.name && savedRace.description && savedRace.startPoint && savedRace.endPoint) {\n      dbRef.push(savedRace);\n      this.setState({\n        name: '',\n        description: \"\",\n        race: {\n          startPoint: '',\n          endPoint: '',\n          selectedCheckpoint: [],\n          raceArray: [],\n          timeCreated:''\n        },\n        view:null\n      })\n    } else {\n      swal('Please make sure you have entered a race name and description, and have selected a station for your \"start\" and \"finish\" locations.')\n    }\n\n    this.setState({\n      randomRaceCreated: false\n    });\n\n  }\n\n  // handle previous button clicked\n  handlePrevRace = (event) => {\n    event.preventDefault();\n    this.setState({\n      view: null\n    })\n  }\n\n  // handle home button clicked\n  handleHome = (event) => {\n    event.preventDefault();\n    this.setState({\n      view: true\n    })\n  }\n\n  //smooth scroll\n  scrollND = () => {\n    scrollToComponent(this.NameDesc)\n  }\n  scrollRP = () => {\n    scrollToComponent(this.RacePoints)\n  }\n  scrollRes = () => {\n    scrollToComponent(this.Result)\n  }\n\n  // Random Race functions\n  getLocation = () => {\n    // console.log(\"getLocation RAAANNN\");\n    navigator.geolocation.getCurrentPosition((location) => {\n        if (location.coords) {\n            let lat = location.coords.latitude;\n            let long = location.coords.longitude;\n            console.log(lat, long)\n            this.setState({\n                longitude: long,\n                latitude: lat,\n                hasCoords: true\n            }, () => {\n                console.log(this.state, \"this is the state\")\n            })\n        }\n    })\n  }\n\n\n  //API call\n  getStationCoords = () => {\n    return axios({\n        method: 'GET',\n        url: 'http://api.citybik.es/v2/networks/toronto',\n        dataResponse: 'json'\n    })\n        .then((response) => {\n            console.log(response.data.network.stations, \"this is the response data stations\");\n            const stations = response.data.network.stations;\n            const stationCoordsArr = [];\n            const totalDist = [];\n            stations.forEach((station) => {\n                // console.log(this.state.latitude);\n\n                let latDist = Math.abs(station.latitude - this.state.latitude);\n                let lngDist = Math.abs(station.longitude - this.state.longitude);\n                let totDist = latDist + lngDist;\n                let stn = {\n                    name: station.name,\n                    totalDist: totDist\n                }\n\n                totalDist.push(stn)\n            })\n            totalDist.sort(function (a, b) {\n                return a.totalDist - b.totalDist\n            })\n            console.log(totalDist, \"this is the totalDist array\");\n            let nearStn = totalDist[0].name;\n            let nearestHund = totalDist.splice(1, 100);\n            console.log(nearestHund, \"this is the nearest hundred\");\n            console.log(nearStn, \"this is the nearest station\");\n            this.setState({\n                nearestStn: nearStn,\n                nearestHundred: nearestHund,\n            })\n            console.log(this.state, \"this is the current state - Gus\")\n\n        })\n  }\n\n  randomRace = () => {\n    let startPoint = this.state.nearestStn;\n    console.log(startPoint);\n    let finish = this.state.nearestHundred[99].name;\n    let checkOneRand = Math.floor(Math.random() * 20);\n    let checkTwoRand = Math.floor(Math.random() * 20) + 20;\n    let checkThreeRand = Math.floor(Math.random() * 20) + 40;\n    let checkFourRand = Math.floor(Math.random() * 20) + 60;\n    let checkFiveRand = Math.floor(Math.random() * 20) + 79;\n    let checkOne = this.state.nearestHundred[checkOneRand].name;\n    let raceArray = [];\n    raceArray.push(this.state.nearestHundred[checkOneRand].name);\n    raceArray.push(this.state.nearestHundred[checkTwoRand].name);\n    raceArray.push(this.state.nearestHundred[checkThreeRand].name);\n    raceArray.push(this.state.nearestHundred[checkFourRand].name);\n    raceArray.push(this.state.nearestHundred[checkFiveRand].name);\n    if (checkOne !== \"\") {\n        this.setState({\n            randomRaceCreated: true,\n            race:\n            {\n              ...this.state.race,\n              raceArray: raceArray,\n              startPoint: startPoint,\n              endPoint: finish\n            }\n        }, () => {\n            console.log(this.state, \"this is thd state with race points\")\n        })\n    }\n  }\n\n\n  //user authentication\n  login = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    const auth = firebase.auth();\n    auth.signInWithPopup(provider)\n      .then((result) => {\n        const user = result.user;\n        const userID = user.uid\n        this.setState({\n          user: true,\n          authID: userID\n        });\n      });\n  }\n\n  logout = () => {\n    const auth = firebase.auth();\n    auth.signOut()\n      .then(() => {\n        this.setState({\n          user: null\n        });\n      });\n  }\n\n  render() {\n    if (this.state.view) {\n      return (\n        <div className=\"App\">\n          <header className=\"headerContent\">\n            <nav className=\"headerNav clearfix\">\n              <h2 className=\"logo\"><span className=\"t\">T</span><img src={logo} alt=\"Toronto bike share logo.\" /> Bike Share Races</h2>\n              <ul className=\"headerList clearfix\">\n                <li className=\"home\"><a href=\"#\">Home</a></li>\n                <li className=\"prevRaces\" onClick={this.handlePrevRace}><a href=\"#\">Previous Races</a></li>\n              </ul>\n            </nav>\n            <div className=\"hamburgerMenu\">\n              <nav className=\"hamNav\">\n                  <h2 className=\"logo\"><span className=\"t\">T</span><img src={logo} alt=\"Toronto bike share logo.\" /> Bike Share Races</h2>\n                  <input className=\"hamburgerOpen\" id=\"toggleOpen\" type=\"checkbox\" name=\"toggle\" />\n                    <label htmlFor=\"toggleOpen\">\n              \n                      <i class=\"fa fa-bars\"></i>\n                    </label>\n                    <ul className=\"hamburgerList\">\n                      <label htmlFor=\"toggleOpen\" class=\"hamburgerClose\">\n                        <i class=\"fas fa-times\"></i>\n                      </label>\n                    <li className=\"home\"><a href=\"#\">Home</a></li>\n                    <li className=\"prevRaces\" onClick={this.handlePrevRace}><a href=\"#\">Previous Races</a></li>\n                    </ul>\n              </nav>    \n            </div>\n            <h1>Welcome to Toronto Bike Share Races</h1>\n            <button className=\"createRaceBtn\" onClick={this.scrollND}>Create Race</button>\n            {\n              this.state.user ? \n            <button className=\"logout\" onClick={this.logout}>Log Out</button>\n            : <button className=\"login\" onClick={this.login}>Login</button>\n            }\n            {\n              this.state.user ?\n                <button className=\"createRaceBtn\" onClick={this.scrollND}>Create Race</button>\n                : <button className=\"createRaceBtn\" onClick={this.scrollND}>Create Race As Guest</button>\n            }\n          </header>\n  \n          <NameDesc \n          takeName={this.upDateName} \n          takeDesc={this.upDateDesc}\n          \n          name={this.state.name}\n          description={this.state.description} \n          ref={(component) => { this.NameDesc = component; }}\n          scrollRacePoints={this.scrollRP}\n          handlePrev={this.handlePrevRace}\n          />\n\n          <RacePoints\n            options = {this.state.options}\n            getStations = {this.getStations}\n            getStationsFromFirebase = {this.getStationsFromFirebase}\n            handleOptionChange={this.handleOptionChange}\n            handleUserStart={this.handleStartChange}\n            handleUserEnd={this.handleEndChange}\n            handleUserCheckPoint={this.handleCheckPointChange}\n            handlePrev={this.handlePrevRace}\n\n            handleAddCheckPoint={this.addCheckPoint}\n            handleDeleteCheckpoint={this.deleteCheckpoint}\n\n            userStart={this.state.race.startPoint}\n            userEnd={this.state.race.endPoint}\n            userCheckPoint={this.state.race.selectedCheckpoint}\n            raceArray={this.state.race.raceArray}\n\n            scrollResults={this.scrollRes}\n            ref={(component) => { this.RacePoints = component; }}\n\n            getLocation = {this.getLocation}\n            longitude = {this.state.longitude}\n            latitude = {this.state.latitude}\n            hasCoords = {this.state.hasCoords}\n            nearestStn = {this.state.nearestStn}\n            nearestHundred = {this.state.nearestHundred}\n            checkOne = {this.state.checkOne}\n            checkTwo = {this.state.checkTwo}\n            checkThree = {this.state.checkThree}\n            finish = {this.state.finish}\n            randomRace = {this.randomRace}\n            getStationCoords = {this.getStationCoords}\n            randomRaceCreated = {this.state.randomRaceCreated}\n          />\n\n          <Result\n            name={this.state.name}\n            description={this.state.description}\n            startP={this.state.race.startPoint}\n            endP={this.state.race.endPoint}\n            checkP={this.state.race.raceArray}\n            user={this.state.user}\n\n            handleSave={this.handleSaveRace}\n            handlePrev={this.handlePrevRace}\n            ref={(component) => { this.Result = component; }}\n          />\n        </div>\n      );\n    } else {\n      if (this.state.user) {\n        return <UserPrevRace\n          authID={this.state.authID}\n          handleBack={this.handleHome}\n        />\n      } else {\n        return <PrevRaces \n          handleBack={this.handleHome} \n          />\n      }\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}